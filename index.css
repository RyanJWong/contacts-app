/* Custom Properties (aka CSS variables) */
/* Asterik stand for all HTML elements */

/* Declare at the root of the html document (the html tag) */
:root {
    --flex-left-background-color:                                       #000000da;
    --flex-right-background-color:                                      #696666;
    --flex-left-scroll-bar-background-color:                            #333333;
    --flex-right-scroll-bar-background-color:                           #333333;
    --flex-left-scroll-bar-hover-color:                                 #111111;
    --flex-right-scroll-bar-hover-color:                                #111111;
    --button-background-color:                                          #ffffff;
    --button-background-gradient-color:                                 #424242;
    --button-border-color:                                              #000000;
    --contact-color:                                                    #4C33EF;
    --contact-icon-color:                                               #4C33EF;

    /* Analogous colors:        #33BDEF #4c33ef */
    /* Complimentary colors:    #EF9D33 #4c33ef */
    --contact-color:                                                    #000000;
    --contact-icon-color:                                               #000000;

    /* Split Complementary 1 Color Theme */
    --split-complementary-1-flex-left-background-color:                 #33BDEF;
    --split-complementary-1-flex-right-background-color:                #EF9D33;
    --split-complementary-1-flex-left-scroll-bar-background-color:      #EF3F33;
    --split-complementary-1-flex-right-scroll-bar-background-color:     #EF3F33;
    --split-complementary-1-flex-left-scroll-bar-hover-color:           #EB1404;
    --split-complementary-1-flex-right-scroll-bar-hover-color:          #EB1404;
    --split-complementary-1-button-background-color:                    #4C33EF;
    --split-complementary-1-button-background-gradient-color:           #412DC0;
    --split-complementary-1-button-border-color:                        #2707F8;
    --split-complementary-1-contact-color:                              #4C33EF;
    --split-complementary-1-contact-icon-color:                         #4C33EF;

    /* Analogous 1 Color Theme */
    --analogous-1-flex-left-background-color:                           #33BDEF;
    --analogous-1-flex-right-background-color:                          #33EF65;
    --analogous-1-flex-left-scroll-bar-background-color:                #4C33EF;
    --analogous-1-flex-right-scroll-bar-background-color:               #4C33EF;
    --analogous-1-flex-left-scroll-bar-hover-color:                     #412DC0;
    --analogous-1-flex-right-scroll-bar-hover-color:                    #412DC0;
    --analogous-1-button-background-color:                              #4C33EF;
    --analogous-1-button-background-gradient-color:                     #412DC0;
    --analogous-1-button-border-color:                                  #2707F8;
    --analogous-1-contact-color:                                        #4C33EF;
    --analogous-1-contact-icon-color:                                   #4C33EF;

    /* Triadic 1 Color Theme */
    --triadic-1-flex-left-background-color:                             #33BDEF;
    --triadic-1-flex-right-background-color:                            #EFCC33;
    --triadic-1-flex-left-scroll-bar-background-color:                  #EF3378;
    --triadic-1-flex-right-scroll-bar-background-color:                 #EF3378;
    --triadic-1-flex-left-scroll-bar-hover-color:                       #F5065D;
    --triadic-1-flex-right-scroll-bar-hover-color:                      #F5065D;
    --triadic-1-button-background-color:                                #4C33EF;
    --triadic-1-button-background-gradient-color:                       #412DC0;
    --triadic-1-button-border-color:                                    #2707F8;
    --triadic-1-contact-color:                                          #4C33EF;
    --triadic-1-contact-icon-color:                                     #4C33EF;

    /* General Colors */
    --scrollbar-track-shadow-color:                                     #808080;
    --button-box-shadow:                                                #F0F7FA;
    --button-text-shadow-color:                                         #5B6178;
    --button-color:                                                     #FFFFFF;                                     
}

/* Global reset */
* {
    /* Remove default margins and padding. Does not work on the body rule */
    margin:             0;
    padding:            0;

    /* The box-sizing property tells the browser what the sizing properties (width and height) should include. With border-box the width and height properties include content, padding and border, but not the margin. The width and height of an element are exactly what we define. */
    box-sizing:         border-box;
}

/* Specifying these defaults at the html root may allow t he Semantic UI rules to override using the
Use of rem units will inherit from document root or default to browser defaults. Body rules should inherit from html tag*/
/* Body rules should inherit from html tag */
body {
    /* Allow page to be infinitely downsized */
    min-width:          100vw;
    min-height:         100vh;

    background-color:   var(--flex-right-background-color);

    font-family:        'Lato', Helvetica, sans-serif;

    font-size:          16px;
}

::-webkit-scrollbar {
    width: 15px;
}

::-webkit-scrollbar-track {
    box-shadow: inset 0 0 5px grey;
    border-radius: 10px;
}

.flex-left::-webkit-scrollbar-corner {
    background: var(--flex-left-background-color);
}

.flex-right::-webkit-scrollbar-corner {
    background: var(--flex-right-background-color);
}

.flex-left::-webkit-scrollbar-thumb {
    background: var(--flex-left-scroll-bar-hover-color);
}

.flex-right::-webkit-scrollbar-thumb {
    background: var(--flex-right-scroll-bar-hover-color);
}

button, input, select, textarea {
    font-family: inherit;
    font-size: inherit;
}


.error-msg {
    color: red;
    font-weight: bold;
    position: relative;
    top: 5px;
}

.flex-container {
    display: flex;
    width: 100vw;
    height: 100vh;
    font-family: inherit;
    font-size: inherit;
}

.flex-left {
    overflow-y: scroll;
    overflow-x: scroll;
    scroll-behavior: auto;

    background: var(--flex-left-background-color);
}
.flex-left .button-container, 
.flex-left .contact-container{
    /* Remove display: flex to dispaly contact list correctly */
    display: flex;
}

.flex-left .ui.selection.dropdown .default.text,
.flex-left .ui.selection.dropdown.text {
    color: var(--button-color);
    padding: 0;
    width: 100%;
    text-align: center;

    position: absolute;
    top: 50%;
    transform: translateY(-50%);
}
.flex-left .ui.selection.dropdown .text .theme-color{ 
    display: inline-block;

}

.flex-left .ui.selection.dropdown .menu { 
    max-height: 50vh;
    background: var(--button-background-color);
}
.flex-left .ui.selection.dropdown .menu {
        max-height:     15vh;
    }
.flex-left .ui.selection.dropdown .menu>.item{ 
    background: var(--button-background-color);
    color: var(--button-color);
}
.flex-left .ui.selection.dropdown .menu .item .theme-color { 
    display: inline-block;
}


.flex-left .ui.selection.dropdown .menu>.item:hover{ 
    background: var(--button-background-gradient-color);
    background-image:    linear-gradient(top, var(--button-background-gradient-color), var(--button-background-color));
}

.flex-left .ui.selection.dropdown,
.flex-left .add-button {
    flex: 1;
    /* Remove semantic padding */
    padding:                0;
    background:             var(--button-background-color);
    background-image:       linear-gradient(top, var(--button-background-color), var(--button-background-gradient-color));
    color:                  var(--button-color);
    border:                 solid var(--button-border-color) 1px;
    border-radius:          28px;

    font-family:            Arial, Helvetica, sans-serif;
    font-weight:            100;
    box-shadow:             1px 1px 1px 0 #000000;
    text-shadow:            1px 1px 20px #000000;
    cursor:                 pointer;
}

.flex-container-inner {
    display: flex;
    background-color: var(--background-color);
    width: 100vw;
    height: 95vh;
}





.flex-left-inner {
    /* 40% of 60% */
    width: 24vw;
}



.flex-left .contact-container >button {
    text-decoration: none;
    background: none;
    border: none;

    color: var(--contact-list-color);
    cursor: pointer;
}

.flex-left .contact-container >button .contact-text{
    padding: 0 10px;
    color: rgb(255, 255, 255);
}

.flex-left .contact-container .contact-button:hover {
    color: var(--contact-hover-color);
}

.flex-left .contact-container .contact-button .contact-image {
    /* Round image */
    border-radius: 50%;
}
.flex-left .contact-container .contact-button .contact-text {
    /* Capitalized for display-only in CSS via text transform capitalize, value still lowercase in array/database */
    text-transform: capitalize;
}
.flex-right .edit-button,
.flex-right .save-button {
    /* Horizontally center the button */
    margin:             0 auto;
    display:            block;

    background:         var(--button-background-color);
    background-image:   linear-gradient(top, var(--button-background-color), var(--button-background-gradient-color));
    color:              var(--button-color);
    border:             solid var(--button-border-color) 1px;
    border-radius:      28px;
    font-family:        Arial, Helvetica, sans-serif;
    font-weight:        100;
    padding:            5px;
    box-shadow:         1px 1px 1px 0 #000000;
    text-shadow:        1px 1px 20px #000000;
    text-decoration:    none;
    text-align:         center;
    width: 18%;
    cursor:             pointer;
}

.flex-right .edit-button:hover,
.flex-right .save-button:hover {
    background: var(--button-background-gradient-color);
    background-image: linear-gradient(top, var(--button-background-color), var(--button-background-gradient-color));
}
.flex-right {
    overflow-y: auto;
    overflow-x: auto;
    scroll-behavior: auto;

    /*Flex direction: row; Default: ONE ROW of flexbox items shown as columns! */
    background: var(--flex-right-background-color);
    /* color: var(--contact-list-color); */
}

.flex-right form {
    width: 100%;
    display: column;
}

.flex-right .contact-row{
    display: flex;
    align-items: center;
    margin-bottom: 10px;
}

.flex-right fieldset {
    border: 0;
}

.flex-right .contact-icon-col{
    float: left;
    width: 10%;
}

.flex-right .contact-col{
    float: left;
    width: 85%;
}

.flex-right-inner {
/* 60% of 60% */
    width: 36vw;
}

.flex-right >h1 {
    font-size: 2em;
}


.flex-right .name {
    color: var(--contact-list-color);
    font-weight: bold;
}

/* All small devices less or equal to 600 px */


/* Responsive Design - Additive CSS - All changeable properties are defined in Media Queries

browserstack.com
https://www.browserstack.com/guide/what-are-css-and-media-query-breakpoints

/* Extra small devices (phones, 600px and down)
@media only screen and (max-width: 600px) {...}

/* Small devices (portrait tablets and large phones, 600px and up)
@media only screen and (min-width: 600px) {...}

/* Medium devices (landscape tablets, 768px and up)
@media only screen and (min-width: 768px) {...}

/* Large devices (laptops/desktops, 992px and up)
@media only screen and (min-width: 992px) {...}

/* Extra large devices (large laptops and desktops, 1200px and up)
@media only screen and (min-width: 1200px) {...}

Bootstrap 4 breakpoints
https://getbootstrap.com/docs/5.0/layout/breakpoints/

Extra small devices (portrait phones, less than 576px) 
No media query since this is the default in Bootstrap because it is "mobile first"
 
Small devices (landscape phones, 576px and up)
@media (min-width: 576px) {...}
 
Medium devices (tablets, 768px and up) The navbar toggle appears at this breakpoint
@media (min-width: 768px) {...}
 
Large devices (desktops, 992px and up) 
@media (min-width: 992px) {...}
 
Extra large devices (large desktops, 1200px and up)
@media (min-width: 1200px) {...}
*/

/* All small devices less than or equal to 600px. At 600px the browser overrides this max-width with min-width: 600px.
/* Display contact list vertically */

/* All devices greater than 601px
Breakpoint needs to be 601 to avoid pixel loophole 
At 600 px browser overrides the max width*/

@media only screen and (max-width: 360px) {
    .flex-left {
        /* Below 360 px, full frame is rendered but rest is obstructed via scrolling */
        width: clamp(108px, 108px, 108px);

        /* font-size: 3vw; */
        font-size: clamp(75%, 75%, 100%);
    }

    .flex-right {
        width: clamp(252px, 252px, 252px);


        
        /* font-size: 3vw; */
        font-size: clamp(75%, 75%, 100%);
    }

    .flex-left .button-container {
        flex-direction: column;
        margin:         2vw 2vw 4vw 2vw;
    }

    .flex-left .ui.selection.dropdown {
        /* Use min-width and min-height to override Semantic UI dropdown size */
        /* min-width:      15vw;
        min-height:     2vh; */
        /* min-width:      85px;
        min-height:     20px; */
        margin:         0 0 2vw 0;

        min-width: clamp(85px, 85px, 85px);
        min-height: clamp(20px, 20px, 20px);

    }
    .flex-left .ui.selection.dropdown .dropdown.icon {
        margin:         0;
        padding:        0;
        line-height:    0;
    }

   
    
    .flex-left .ui.selection.dropdown .menu::-webkit-scrollbar {
        /* Limit the width of menu vertical scrollbar */
        max-width:      2vw;
    }

    .flex-left .ui.selection.dropdown .menu>.item {
        width:          100%;
        /* Twice the height of menu colors */
        height:         4vh;
        
        /* Override Semantic UI dropdown */
        /* padding:        0 !important; */
        
    }
    .flex-left .ui.selection.dropdown .menu .item .theme-color-container {
        width:          100%;
        height:         2vh;
        text-align:     center;
        /* margin:         0 0 2vw 0; */

        /* Remove Seamntic UI drowndown top border */
        /* border:         none;  */

        position:       absolute;
        top:            50%;
        left:           50%;
        transform:      translate(-50%, -50%); 
    }
    .flex-left .ui.selection.dropdown .menu .item .theme-color-container .theme-color{
        width:          28%;

        /* Must be the same as menu item height to prevent overflow */
        height:         1vh;
    }
    .flex-left .ui.selection.dropdown .text .theme-color-container{ 
        width:          100%;
        height:         2vh;
        text-align:     center;
        /* margin:         0 0 2vw 0; */

        /* Remove Seamntic UI drowndown top border */
        /* border:         none;  */

        position:       absolute;
        top:            50%;
        left:           50%;
        transform:      translate(-50%, -50%); 
    }
    
    .flex-left .ui.selection.dropdown .text .theme-color-container .theme-color{
        width:          28%;

        /* Must be the same as menu item height to prevent overflow */
        height:         1vh;
    }
    .flex-left .add-button {
        /* Use same min width and height to Semantic UI drowndown size */
        /* min-width:      85px;
        min-height:     20px; */
        min-width: clamp(85px, 85px, 85px);               
        min-height: clamp(20px, 20px, 20px);

    }

    .flex-left .contact-container {
        margin: 0 0 2vw 0;
    }

    .flex-left .contact-container .contact-button {
        display:        flex;
        flex-direction: column;

        /* For multi item flex containers */
        align-content:  center;
        flex-wrap:      wrap;

        /* Vertically align the image */
        align-items:    center;

        /* Set the size of all contact buttons to left size */
    }
    
    .flex-left .contact-container .contact-button .contact-image {
        /* height:         6vw;  */
        /* Approx 21 px at 359 px */
        /* width:          6vw;
        min-width:      6vw; */
        width:          clamp(32px, 32px, 32px);
        height:         clamp(32px, 32px, 32px);
        min-width:      clamp(32px, 32px, 32px);
    }
    .flex-left .contact-container .contact-button .contact-text {
        flex:           1;
        font-size:      12px;
        text-align:     center;
    }
   
    
    .flex-right .edit-button,
    .flex-right .save-button {
        min-height:     90px;
        min-width:      20px;
    }
   
    
    .flex-right .icon,
    .flex-right .blank-icon{
        font-size: 1em;
    }
}

@media screen and (max-width: 600px) {
    .flex-left {
        width: 30vw;

        font-size: 3vw;
    }

    .flex-right {
        width: 70vw;

        font-size: 3vw;
    }

    .flex-left .button-container {
        flex-direction: column;
        margin:         2vw 2vw 4vw 2vw;
    }
    
    
    .flex-left .ui.selection.dropdown {
        /* Use min-width and min-height to override Semantic UI dropdown size */
        min-width:      15vw;
        min-height:     3vh;
        margin:         0 0 2vw 0;
    }
    .flex-left .ui.selection.dropdown .dropdown.icon {
        margin:         0;
        padding:        0;
        line-height:    0;
    }

   
    .flex-left .ui.selection.dropdown .menu {
        max-height:     15vh;
    }
    .flex-left .ui.selection.dropdown .menu::-webkit-scrollbar {
        /* Limit the width of menu vertical scrollbar */
        max-width:      2vw;
    }

    .flex-left .ui.selection.dropdown .menu>.item {
        width:          100%;
        height:         3vh;
        
        /* Override Semantic UI dropdown */
        padding:        0 !important;
        
    }
    .flex-left .ui.selection.dropdown .menu .item .theme-color-container {
        width:          100%;
        height:         2vh;
        text-align:     center;
        /* margin:         0 0 2vw 0; */

        /* Remove Seamntic UI drowndown top border */
        /* border:         none;  */

        position:       absolute;
        top:            50%;
        left:           50%;
        transform:      translate(-50%, -50%); 
    }
    .flex-left .ui.selection.dropdown .menu .item .theme-color-container .theme-color{
        width:          40%;

        /* Must be the same as menu item height to prevent overflow */
        height:         2vh;
    }
    .flex-left .ui.selection.dropdown .text .theme-color-container{ 
        width:          100%;
        height:         2vh;
        text-align:     center;
        /* margin:         0 0 2vw 0; */

        /* Remove Seamntic UI drowndown top border */
        /* border:         none;  */

        position:       absolute;
        top:            50%;
        left:           50%;
        transform:      translate(-50%, -50%); 
    }
    
    .flex-left .ui.selection.dropdown .text .theme-color-container .theme-color{
        width:          40%;

        /* Must be the same as menu item height to prevent overflow */
        height:         2vh;
    }
    .flex-left .add-button {
        /* Use same min width and height to Semantic UI drowndown size */
        min-width:      15vw;
        min-height:     3vh;
    }

    .flex-left .contact-container {
        margin: 0 0 2vw 0;
    }

    .flex-left .contact-container .contact-button {
        display:        flex;
        flex-direction: column;

        /* For multi item flex containers */
        align-content:  center;
        flex-wrap:      wrap;

        /* Vertically align the image */
        align-items:    center;

        /* Set the size of all contact buttons to left size */
        width:          30vw;
    }
    
    .flex-left .contact-container .contact-button .contact-image {
        height:         6vw; 
        /* Approx 21 px at 359 px */
        width:          6vw;
        min-width:      6vw;
    }
    .flex-left .contact-container .contact-button .contact-text {
        flex:           1;
        
        text-align:     center;
    }
   
    
    
   
    
    .flex-right .icon,
    .flex-right .blank-icon{
        font-size: 1em;
    }
}
@media screen and (min-width: 600px) {
    .flex-left {
        width: 30vw;

        font-size: 2.5vw;
    }

    .flex-right {
        width: 70vw;

        font-size: 2.5vw;
    }

    .flex-left .button-container {
        flex-direction: column;
        margin:         2vw 2vw 4vw 2vw;
    }

    .flex-left .ui.selection.dropdown {
        /* Use min-width and min-height to override Semantic UI dropdown size */
        min-width:      15vw;
        min-height:     4vh;
        margin:         0 0 2vw 0;
    }
    .flex-left .ui.selection.dropdown .dropdown.icon {
        margin:         0;
        padding:        0;
        line-height:    0;
    }
    
    .flex-left .ui.selection.dropdown .menu::-webkit-scrollbar {
        /* Limit the width of menu vertical scrollbar */
        max-width:      3vw;
    }

    .flex-left .ui.selection.dropdown .menu>.item {
        width:          100%;
        height:         3vh;
        
        /* Override Semantic UI dropdown */
        padding:        0 !important;
        
    }
    .flex-left .ui.selection.dropdown .menu .item .theme-color-container {
        width:          100%;
        height:         2vh;
        text-align:     center;
        /* margin:         0 0 2vw 0; */

        /* Remove Seamntic UI drowndown top border */
        /* border:         none;  */

        position:       absolute;
        top:            50%;
        left:           50%;
        transform:      translate(-50%, -50%); 
    }
    .flex-left .ui.selection.dropdown .menu .item .theme-color-container .theme-color{
        width:          40%;

        /* Must be the same as menu item height to prevent overflow */
        height:         2vh;
    }

    .flex-left .ui.selection.dropdown .text .theme-color-container{ 
        width:          100%;
        height:         2vh;
        text-align:     center;
        /* margin:         0 0 2vw 0; */

        /* Remove Seamntic UI drowndown top border */
        /* border:         none;  */

        position:       absolute;
        top:            50%;
        left:           50%;
        transform:      translate(-50%, -50%); 
    }

    .flex-left .ui.selection.dropdown .text .theme-color-container .theme-color{
        width:          40%;

        /* Must be the same as menu item height to prevent overflow */
        height:         2vh;
    }

    .flex-left .add-button {
        /* Use same min width and height to Semantic UI drowndown size */
        min-width:      15vw;
        min-height:     4vh;
    }
 
    .flex-left .contact-container {
        margin: 0 0 1.5vw 0;
        padding: 0 10px;
    }

    .flex-left .contact-container .contact-button {
        display:        flex;
        flex-direction: column;

        /* For multi item flex containers */
        align-content:  center;
        flex-wrap:      wrap;

        /* Vertically align the image */
        align-items:    center;

        /* Set the size of all contact buttons to left size */
        width:          30vw;
    }
    
    .flex-left .contact-container .contact-button .contact-image {
        height:         6vw; 
        /* Approx 21 px at 359 px */
        width:          6vw;
        min-width:      6vw;
    }
    .flex-left .contact-container .contact-button .contact-text {
        flex:           1;
        
        text-align:     left;
    }
   
    
    
   
    
    .flex-right .icon,
    .flex-right .blank-icon{
        font-size: 1em;
    }
}

@media screen and (min-width: 768px) and (max-width: 992px) { 
  .flex-left {
        width: 30vw;

        font-size: 1.8vw;
    }

    .flex-right {
        width: 70vw;

        font-size: 1.8vw;
    }

    .flex-left .button-container {
        flex-direction: column;
        margin:         2vw 2vw 4vw 2vw;
    }

    .flex-left .ui.selection.dropdown {
        /* Use min-width and min-height to override Semantic UI dropdown size */
        min-width:      15vw;
        min-height:     4vh;
        margin:         0 0 2vw 0;
    }
    .flex-left .ui.selection.dropdown .dropdown.icon {
        margin:         0;
        padding:        0;
        line-height:    0;
    }

    .flex-left .ui.selection.dropdown .menu::-webkit-scrollbar {
        /* Limit the width of menu vertical scrollbar */
        max-width:      3vw;
    }

    .flex-left .ui.selection.dropdown .menu>.item {
        width:          100%;
        height:         3vh;
        
        /* Override Semantic UI dropdown */
        padding:        0 !important;
        
    }
    .flex-left .ui.selection.dropdown .menu .item .theme-color-container {
        width:          100%;
        height:         2vh;
        text-align:     center;
        /* margin:         0 0 2vw 0; */

        /* Remove Seamntic UI drowndown top border */
        /* border:         none;  */

        position:       absolute;
        top:            50%;
        left:           50%;
        transform:      translate(-50%, -50%); 
    }
    .flex-left .ui.selection.dropdown .menu .item .theme-color-container .theme-color{
        width:          40%;

        /* Must be the same as menu item height to prevent overflow */
        height:         2vh;
    }

    .flex-left .ui.selection.dropdown .text .theme-color-container{ 
        width:          100%;
        height:         2vh;
        text-align:     center;
        /* margin:         0 0 2vw 0; */

        /* Remove Seamntic UI drowndown top border */
        /* border:         none;  */

        position:       absolute;
        top:            50%;
        left:           50%;
        transform:      translate(-50%, -50%); 
    }

    .flex-left .ui.selection.dropdown .text .theme-color-container .theme-color{
        width:          40%;

        /* Must be the same as menu item height to prevent overflow */
        height:         2vh;
    }

    .flex-left .add-button {
        /* Use same min width and height to Semantic UI drowndown size */
        min-width:      15vw;
        min-height:     4vh;
    }
 
    .flex-left .contact-container {
        margin: 0 0 1.5vw 0;
        padding: 0 10px;
    }

    .flex-left .contact-container .contact-button {
        display:        flex;
        flex-direction: row;

        /* For multi item flex containers */
        align-content:  center;
        flex-wrap:      wrap;

        /* Vertically align the image */
        align-items:    center;

        /* Set the size of all contact buttons to left size */
        width:          30vw;
    }
    
    .flex-left .contact-container .contact-button .contact-image {
        height:         5vw; 
        /* Approx 21 px at 359 px */
        width:          5vw;
        min-width:      5vw;
    }
    .flex-left .contact-container .contact-button .contact-text {
        flex:           1;
        
        text-align:     left;
    }
   
    
    
   
    
    .flex-right .icon,
    .flex-right .blank-icon{
        font-size: 1em;
    }
}
@media screen and (min-width: 992px) {
    .flex-left {
          width: 30vw;
  
          font-size: 12px;
      }
  
      .flex-right {
          width: 70vw;
  
          font-size: 12px;
      }
  
      .flex-left .button-container {
          flex-direction: row;
          margin:         2vw 2vw 4vw 2vw;
      }
  
      .flex-left .ui.selection.dropdown {
          /* Use min-width and min-height to override Semantic UI dropdown size */
          min-width:      10vw;
          min-height:     4vh;
          margin:         0 1vw 2vw 0;
      }
      .flex-left .ui.selection.dropdown .dropdown.icon {
          margin:         0;
          padding:        0;
          line-height:    0;
      }
  
      .flex-left .ui.selection.dropdown .menu::-webkit-scrollbar {
          /* Limit the width of menu vertical scrollbar */
          max-width:      3vw;
      }
  
      .flex-left .ui.selection.dropdown .menu>.item {
          width:          100%;
          height:         3vh;
          
          /* Override Semantic UI dropdown */
          padding:        0 !important;
          
      }
      .flex-left .ui.selection.dropdown .menu .item .theme-color-container {
          width:          100%;
          height:         2vh;
          text-align:     center;
          /* margin:         0 0 2vw 0; */
  
          /* Remove Seamntic UI drowndown top border */
          /* border:         none;  */
  
          position:       absolute;
          top:            50%;
          left:           50%;
          transform:      translate(-50%, -50%); 
      }
      .flex-left .ui.selection.dropdown .menu .item .theme-color-container .theme-color{
          width:          40%;
  
          /* Must be the same as menu item height to prevent overflow */
          height:         2vh;
      }
  
      .flex-left .ui.selection.dropdown .text .theme-color-container{ 
          width:          100%;
          height:         2vh;
          text-align:     center;
          /* margin:         0 0 2vw 0; */
  
          /* Remove Seamntic UI drowndown top border */
          /* border:         none;  */
  
          position:       absolute;
          top:            50%;
          left:           50%;
          transform:      translate(-50%, -50%); 
      }
  
      .flex-left .ui.selection.dropdown .text .theme-color-container .theme-color{
          width:          40%;
  
          /* Must be the same as menu item height to prevent overflow */
          height:         2vh;
      }
  
      .flex-left .add-button {
          /* Use same min width and height to Semantic UI drowndown size */
          min-width:      10vw;
          height:     4vh;
      }
   
      .flex-left .contact-container {
          margin: 0 0 1.5vw 0;
          padding: 0 10px;
      }
  
      .flex-left .contact-container .contact-button {
          display:        flex;
          flex-direction: row;
  
          /* For multi item flex containers */
          align-content:  center;
          flex-wrap:      wrap;
  
          /* Vertically align the image */
          align-items:    center;
  
          /* Set the size of all contact buttons to left size */
          width:          30vw;
      }
      
      .flex-left .contact-container .contact-button .contact-image {
          height:         5vw; 
          /* Approx 21 px at 359 px */
          width:          5vw;
          min-width:      5vw;
      }
      .flex-left .contact-container .contact-button .contact-text {
          flex:           1;
          
          text-align:     left;
      }
     
      
      
     
      
      .flex-right .icon,
      .flex-right .blank-icon{
        font-size: clamp(100%, 100%, 130%);
      }
  }

  @media screen and (min-width: 1200px) {
    .flex-left {
          width: 30vw;
  
          font-size: clamp(100%, 100%, 130%);
      }
  
      .flex-right {
          width: 70vw;
  
          font-size: clamp(100%, 100%, 130%);
      }
  
      .flex-left .button-container {
          flex-direction: row;
          margin:         2vw 2vw 4vw 2vw;
      }
  
      .flex-left .ui.selection.dropdown {
          /* Use min-width and min-height to override Semantic UI dropdown size */
          min-width:      12vw;
          min-height:     5vh;
          margin:         0 1vw 2vw 0;
      }
      .flex-left .ui.selection.dropdown .dropdown.icon {
          margin:         0;
          padding:        0;
          line-height:    0;
      }
  
      .flex-left .ui.selection.dropdown .menu::-webkit-scrollbar {
          /* Limit the width of menu vertical scrollbar */
          max-width:      3vw;
      }
  
      .flex-left .ui.selection.dropdown .menu>.item {
          width:          100%;
          height:         3vh;
          
          /* Override Semantic UI dropdown */
          padding:        0 !important;
          
      }
      .flex-left .ui.selection.dropdown .menu .item .theme-color-container {
          width:          100%;
          height:         2vh;
          text-align:     center;
          /* margin:         0 0 2vw 0; */
  
          /* Remove Seamntic UI drowndown top border */
          /* border:         none;  */
  
          position:       absolute;
          top:            50%;
          left:           50%;
          transform:      translate(-50%, -50%); 
      }
      .flex-left .ui.selection.dropdown .menu .item .theme-color-container .theme-color{
          width:          40%;
  
          /* Must be the same as menu item height to prevent overflow */
          height:         2vh;
      }
  
      .flex-left .ui.selection.dropdown .text .theme-color-container{ 
          width:          100%;
          height:         2vh;
          text-align:     center;
          /* margin:         0 0 2vw 0; */
  
          /* Remove Seamntic UI drowndown top border */
          /* border:         none;  */
  
          position:       absolute;
          top:            50%;
          left:           50%;
          transform:      translate(-50%, -50%); 
      }
  
      .flex-left .ui.selection.dropdown .text .theme-color-container .theme-color{
          width:          40%;
  
          /* Must be the same as menu item height to prevent overflow */
          height:         2vh;
      }
  
      .flex-left .add-button {
          /* Use same min width and height to Semantic UI drowndown size */
          min-width:      12vw;
          
          height:     5vh;
      }
   
      .flex-left .contact-container {
          margin: 0 0 1.5vw 0;
          padding: 0 10px;
      }
  
      .flex-left .contact-container .contact-button {
          display:        flex;
          flex-direction: row;
  
          /* For multi item flex containers */
          align-content:  center;
          flex-wrap:      wrap;
  
          /* Vertically align the image */
          align-items:    center;
  
          /* Set the size of all contact buttons to left size */
          width:          30vw;
      }
      
      .flex-left .contact-container .contact-button .contact-image {
          height:         4vw; 
          /* Approx 21 px at 359 px */
          width:          4vw;
          min-width:      4vw;
      }
      .flex-left .contact-container .contact-button .contact-text {
          flex:           1;
          
          text-align:     left;
      }
     
      
      
     
      /* Resize in responsive or clamp */
      .flex-right .icon,
      .flex-right .blank-icon{
        font-size: 1.6em;
      }
  }

